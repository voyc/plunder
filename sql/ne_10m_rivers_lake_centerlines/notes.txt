
/home/jhagstrand/webapps/plunder_dev/plunder/sql/ne_10m_rivers_lake_centerlines

1:110m 14 rivers, scalerank 1 and 2
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/110m/physical/ne_110m_rivers_lake_centerlines.zip 
unzip
shp2pgsql -c -W LATIN1 ne_110m_rivers_lake_centerlines plunder.rivers110 >load.rivers110.sql
psql -d voyc -U jhagstrand <load.rivers110.sql

1:10m 1454 rivers, scalerank 1 thru 10, 148 rows in our target geo
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/physical/ne_10m_rivers_lake_centerlines.zip
unzip 
shp2pgsql -c -W LATIN1 ne_10m_rivers_lake_centerlines plunder.rivers10 >load.rivers10.sql
psql -d voyc -U jhagstrand <load.rivers10.sql

1:50m 460 rivers, scalerank 1 thru 6, 42 rows in our target geo
wget http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/physical/ne_50m_rivers_lake_centerlines.zip
unzip 
shp2pgsql -c -W LATIN1 ne_50m_rivers_lake_centerlines plunder.rivers50 >load.rivers50.sql
psql -d voyc -U jhagstrand <load.rivers50.sql


select * from plunder.rivers10 limit 100;

select featurecla, scalerank, count(*) 
from plunder.rivers10
group by featurecla, scalerank
order by featurecla, scalerank;

	this.world.gn = 40.8969036908;
	this.world.gs = 11.3076785449;
	this.world.gw = 56.42578125;
	this.world.ge = 112.390136719;

select gid, name, ST_XMax(the_geom) from plunder.rivers10 limit 100;

select count(*)
from plunder.rivers10
where ST_XMax(the_geom) < 112.39
and ST_XMin(the_geom) > 56.42
and ST_YMax(the_geom) < 40.89
and ST_YMin(the_geom) > 11.30;

select gid, scalerank, featurecla, name, ST_NPoints(the_geom)
from plunder.rivers50
where ST_XMax(the_geom) < 112.39
and ST_XMin(the_geom) > 56.42
and ST_YMax(the_geom) < 40.89
and ST_YMin(the_geom) > 11.30;


use rivers50
pull records
geocode
plot

gen js file or realtime data pull
gen js file for now
start with indus and ganges only

/* Indus and Ganges */
where gid = 30, 220, 195

